pico-8 cartridge // http://www.pico-8.com
version 16
__lua__

-- mai-chan's sweet buns
-- by jellycat

---------------------
-- how many rows and cols ?
-- how many orders ?
-- allow 1x orders ?
-- game over condition ?
-- powerups instead of points
---------------------

-- todo --
-- control board size with variable
-- cursor
-- orders
-- selling buns !

function _init()
  fadeperc = 0
  dpal = {0, 1, 1, 2, 1, 13, 6, 4, 4, 9, 3, 13, 1, 13, 14}
  _upd = update_main
  _drw = draw_main

end

function startgame()
  _upd = update_game
  _drw = draw_game
  rndbuns()
end

function rndbuns()
  local _i, _di, _imax, _x, _y

  -- init board
  boardw, boardh = 4, 4 
  boardx, boardy = flr(64 - (boardw * 17 / 2)), 20

  buns = {}
  mailbox = {}
  
  -- fill with offscreen values
  _imax = (boardh + 2) * (boardw + 1) - 1
  for _i = 0,_imax do
    buns[_i] = -1  
  end

  -- fill just the board with buns
  _imax = boardh * boardw - 1
  for _x = 0,boardw - 1 do
    for _y = 0, boardh - 1 do
      _i = _x + _y * boardw
      _di = _x + (_y + 1) * (boardw + 1)
      mailbox[_i] = _di
      buns[_di] = flr(rnd(4))
    end
  end
end

-->8
-- updates

function _update60()
  _upd()
end

function update_main()
  if btnp(5) then 
    fadeout()
    startgame()
  end
end

function update_game()
  if (btnp(5)) rndbuns()
end

-->8
-- draws

function _draw()
  _drw()
end

function draw_main()
  checkfade()
  cls(14)
  rrectfill(32, 27, 94, 50, 15)
  coprint("mai-chan's", 64, 32, 7, 13)
  coprint("sweet buns", 64, 38, 7, 13)
  
  rrectfill(32, 90, 94, 99, 13)
  coprint("start game", 64, 92, 7, 1)
end

function draw_game()
  local _x, _y, _i, _tx, _ty
  checkfade()
  cls(7)

  for _x = 0,boardw - 1 do
    for _y = 0,boardh - 1 do
      _tx = boardx + _x * 17
      _ty = boardy + _y * 17
      rrectfill(_tx, _ty, _tx + 15, _ty + 15, 6)
    end
  end

  for _x = 0,boardw - 1 do
    for _y = 0,boardh - 1 do
      _tx = boardx + _x * 17
      _ty = boardy + _y * 17
      _i = mailbox[_x + _y * boardw]
      if buns[_i] == -1 then
        -- offscreen
      else
        drawbun(_tx, _ty, buns[_i])
      end
    end
  end
end

function drawbun(_x, _y, _spr)
  -- shadow
  pal(2, 13)
  spr(_spr * 2, _x, _y + 1, 2, 2)

  -- bun
  pal()
  spr(_spr * 2, _x, _y, 2, 2)
end

-->8
-- ui

function cprint(_t, _x ,_y, _c)
  -- centered print
  print(_t, _x - #_t*2, _y , _c)
end

function coprint(_t, _x ,_y, _c, _c2)
  -- centered print with outline
  oprint(_t, _x - #_t*2, _y , _c, _c2)
end

function oprint(_t, _x ,_y, _c, _c2)
  -- outlined print
  local _xo, _yo =  {-1, 1, 0, 0, -1, -1, 1, 1, -1, 0, 1},
                    {0, 0, -1, 1, -1, 1, -1, 1, 2, 2, 2}

  for i = 1,11 do
    print(_t, _x + _xo[i], _y + _yo[i], _c2)
  end

  print(_t, _x, _y, _c)
end

function rrectfill(_x, _y, _x2, _y2, _c)
  rectfill(_x, _y + 1, _x2, _y2 - 1, _c)
  rectfill(_x + 1, _y, _x2 - 1, _y2, _c)
end

function fadeout(_spd)
  if (_spd == nil) _spd = 0.04
  repeat
    fadeperc = min(fadeperc + _spd, 1)
    dofade()
    flip()
  until fadeperc == 1
end

function checkfade()
  if fadeperc > 0 then
    fadeperc = max(fadeperc - 0.04, 0)
    dofade()
  end
end

function dofade()
  -- 0 means normal
  -- 1 is completely black
  local p, kmax, col, j, k = flr(mid(0, fadeperc, 1) * 100)
  for j = 1,15 do
    col = j
    kmax = (p + (j * 1.46)) / 22
    for k = 1,kmax do
      col = dpal[col]
    end
    pal(j, col, 1)
  end
end

__gfx__
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002220000000
00000222222000000000022222200000000022222222000000022220002220000000002200000000002220000000000000002222222200000000002ff2200000
0002244444422000000224494442200000224444444422000024444222444200000002442200000002fff220000000000022ffffffff2200000022efffe20000
0024444444444200002444944444420002ff44ffffff44200244444244444420000024444422000024222ff22000000002ffeeeeeeeeee200002feeeeffe2000
0244777444444220029444944444442002f44ff4444ff442244424244422444200024422444422002f222222f220000002feeeeeeeeeee20002effeeffeef200
024477444444422024494944444999202ff44fff4444f442244202444220244200244444422444202f44222222f220002feee2eeee2eeee202eeeffffeeefe20
244444444444222224494944449444922ff444ffff44f4922442244424422442024442444444422029ff4422222222202feeee2222feeee202feeeeeeeeffe20
24444444444422222444fff9494444422fff44444444f492244424442442444202224442422422200299ff442222222228eeeeffffeeee8202ffeeeeefffee20
29444444444422422fff222f9444444229fff444444ff49224442992299244420222224444422220002299ff442222f229eeeeeeeeeeee92002fffffffeee200
299944444442444202220002f49994422999ffffffff44920244422222244420024422224422222000002299ff444ff22988eeeeeeee889200244eeeeee44200
029999999994442000000000244449200299999999994422029444444444492002224422222222000000002299ffff9202998888888899200002944444442000
02ff9999999444200000000024444f20029999999999420000299444444992000022224422222000000000002299992002999999999999200002949494942000
0022ffffff44220000000002444ff200002299999994200000022999999220000000222242220000000000000022220000229999999922000000249494920000
000022222222000000000002fff22000000022222222000000000222222000000000002222200000000000000000000000002222222200000000022222200000
00000000000000000000000022200000000000000000000000000000000000000000000022000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000022000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000222299220000000000022000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000229944999420000000222fe200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
002999994999420000022778e8822000000000022000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0029949999944200002427f788f22200000000222200000000000000000000000000000000000000000000000000000000000000000000000000000000000000
02999449944444200242777ffff72420000002994420000000000000000000000000000000000000000000000000000000000000000000000000000000000000
02449944444444200242f777777f2420000024944942000000000000000000000000000000000000000000000000000000000000000000000000000000000000
002444444444f2000242ff7777ff2420000249449949200000000000000000000000000000000000000000000000000000000000000000000000000000000000
002ff444444ff200024422ffff224420002499494499420000000000000000000000000000000000000000000000000000000000000000000000000000000000
02977ffffff774200294442222444920022244444444222000000000000000000000000000000000000000000000000000000000000000000000000000000000
02997777777744200299944444499920022229999992222000000000000000000000000000000000000000000000000000000000000000000000000000000000
00299999994442000029999999999200002222222222220000000000000000000000000000000000000000000000000000000000000000000000000000000000
00022994444220000002299999922000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000222222000000000022222200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
